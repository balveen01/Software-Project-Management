# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Run unit tests
      run: |
        cd test_files
        cd unit_tests
        python unit_test.py
    - name: Run Job Application integration tests
      run: |
        cd test_files
        cd integration_tests
        python job_application_intergation_test.py
    - name: Run Login Details integration tests
      run: |
        cd test_files
        cd integration_tests
        python login_details_integration_test.py
    - name: Run Role Applicant Filter integration tests
      run: |
        cd test_files
        cd integration_tests
        python role_applicant_filter_integration_test.py
    - name: Run Role Applicant integration tests
      run: |
        cd test_files
        cd integration_tests
        python role_applicants_integration_test.py
    - name: Run Role Creation integration tests
      run: |
        cd test_files
        cd integration_tests
        python role_creation_integration_test.py
    - name: Run Role Listing Filter integration tests
      run: |
        cd test_files
        cd integration_tests
        python role_listing_filter_integration_test.py
    - name: Run Role Listing integration tests
      run: |
        cd test_files
        cd integration_tests
        python role_listings_integration_test.py
    - name: Run Staff Profile integration tests
      run: |
        cd test_files
        cd integration_tests
        python staff_profile_integration_test.py
